<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd"
             version="2.1">

    <persistence-unit name="bookStorePU" transaction-type="JTA">
        <description>mysql</description>

        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
        <jta-data-source>java:jboss/datasources/MySqlDS</jta-data-source>

        <!--There is only one Object with an id can exist in the Context -->
        <class>de.arcadius.firstApp.model.Book</class>

        <properties>
        <!-- Embedded mode -->
           		 <!-- <property name="javax.persistence.jdbc.driver" value="org.apache.derby.jdbc.EmbeddedDriver"/> -->
           		<!--  <property name="javax.persistence.jdbc.url" value="jdbc:derby:memory:EE7Lab08DB;create=true"/> -->
         <!-- Client Server mode -->
            	<!--<property name="javax.persistence.jdbc.driver" value="org.apache.derby.jdbc.ClientDriver"/>-->
           		 <!--<property name="javax.persistence.jdbc.url" value="jdbc:derby://localhost:1527/EE7Lab08DB;create=true"/>-->
           		 <!--<property name="javax.persistence.jdbc.user" value="APP"/>-->
				<!--<property name="javax.persistence.jdbc.password" value="APP"/>-->

         <!--Dialect Hibernate Properties -->
            <!--<property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect"/>-->
            <property name="hibernate.dialect" value="org.hibernate.dialect.MySQL5Dialect"/>
            <property name="hibernate.max_fetch_depth" value="3"/>
            <property name="hibernate.hbm2ddl.auto" value="update"/>
            <property name="hibernate.show_sql" value="true"/>

            <!--Defines whether the persistence provider shall create the database, first drop and then recreate it,
            only drop it or do nothing at all. If this property is not provided, no schema will be created.
        	This can be set to create and it will create db staff on deploy.
        	[none,create,drop-and-create,drop]-->
            <property name="javax.persistence.schema-generation.database.action" value="drop-and-create"/>
            <!--Defines which scripts the persistence provider shall create. A script target needs to be defined for each script to be created.-->
            <property name="javax.persistence.schema-generation.scripts.action" value="drop-and-create"/>
            <!--Defines the target location of the create script generated by the persistence provider.-->
            <property name="javax.persistence.schema-generation.scripts.create-target" value="./bookStoreCreate.ddl"/>
            <!--Defines the target location of the drop script generated by the persistence provider.-->
            <property name="javax.persistence.schema-generation.scripts.drop-target" value="./bookStoreDrop.ddl"/>
            <!--Defines the location of the SQL script that shall be used load data into the database.-->
            <property name="javax.persistence.sql-load-script-source" value="META-INF/import.sql"/>
        </properties>
    </persistence-unit>
</persistence>



